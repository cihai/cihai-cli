[tool.black]
skip-string-normalization = true

[tool.poetry]
name = "cihai-cli"
version = "0.6.0a1"
description = "Command line frontend for the cihai CJK language library"
license = "MIT"
authors = ["Tony Narlock <tony@git-pull.com>"]
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "Programming Language :: Python",
  "Programming Language :: Python :: 2.7",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.5",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Internationalization",
  "Topic :: System :: Shells",
  "Topic :: Utilities"
]

packages = [
    { include = "cihai_cli" }
]

homepage = "https://cihai-cli.git-pull.com"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/cihai/cihai-cli/issues"
Documentation = "https://cihai-cli.git-pull.com"
Repository = "https://github.com/cihai/cihai-cli"

[tool.poetry.dependencies]
python = "~2.7 || ^3.5"
click = ">=7<8"
cihai = "~=0.9.0"
PyYAML = "<6,>=3.12"

[tool.poetry.dev-dependencies]
### Docs ###
sphinx = [
  {version="<2", python="<3"},
  {version="*", python=">=3"}
]
alagitpull = {version = "^0.1.0"}
sphinx-issues = {version = "^1.2.0"}
sphinx-click = {version = "*"}

### Testing ###
pytest = [
  {version="<4.7.0", python="<3"},
  {version="*", python=">=3"}
]
pathlib2 = {version="<2.3.5", python="<3"}  # Untangle pytest peer-dependency
pytest-rerunfailures = "*"

### Coverage ###
codecov = "*"
coverage = "*"
pytest-cov = [
  {version="<2.10.0", python="<3"},
  {version="*", python=">=3"}
]

### Format ###
black = {version="==19.10b0", python="^3.6"}
isort = [
  {version="<5", python="<3.6"},
  {version="*", python=">=3.6"}
]

### Lint ###
flake8 = "*"

[tool.poetry.scripts]
cihai = 'cihai_cli.cli:cli'

[tool.poetry.extras]
docs = ["sphinx", "sphinx-issues", "sphinx-click", "alagitpull"]
test = ["pytest", "pathlib2", "pytest-rerunfailures"]
coverage = ["codecov", "coverage", "pytest-cov"]
format = ["black", "isort"]
lint = ["flake8"]
